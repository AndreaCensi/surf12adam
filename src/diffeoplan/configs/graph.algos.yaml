
# - id: informed
#   desc: Expansive Planner Algorithm with downscaled image for distance.
#   code:
#   - diffeoplan.library.InformedSearch
#   - max_ittr: 250
#     thresh: 0.1
#     nsteps: 5
#     metric: neigh2
      
  
    
    
    
# - id: expansive_${n}_r${r}
#   desc: Expansive Planner Algorithm; max ${n} steps.
#   code:
#   - diffeoplan.library.RandomizedExpansion
#   - max_ittr: 1000
#     thresh: 0.1
#     region: "${r}"
#     nsteps: "${n}"
#     metric: neigh1eff

# - id: "graphsearch_deep_${n}"
#   desc: "Graph search; deep; ${n} steps."
#   code:
#   - diffeoplan.library.GraphSearchDeep
#   - nsteps: "${n}"
#     thresh: 0.1
#     metric: neigh1eff
#     max_ittr: "${n}*${n}"

# - id: "graphsearch_breadth_${n}"
#   desc: "Graph search; breadth; ${n} steps."
#   code:
#   - diffeoplan.library.GraphSearchBreadth
#   - nsteps: "${n}"
#     thresh: 0.1
#     metric: neigh1eff
#     max_ittr: "${n}*${n}"

# - id: "structured_breadth_${n}"
#   desc: "Graph search; breadth; ${n} steps."
#   code:
#   - diffeoplan.library.GraphSearchBreadthStructured
#   - nsteps: "${n}"
#     thresh: 0.1
#     metric: neigh1eff
#     max_ittr: "${n}*${n}"
#     tracker_thresh: 0.2


# - id: "generic_${n}"
#   desc: "Graph search; breadth; ${n} steps."
#   code:
#   - diffeoplan.library.GenericGraphPlanner
#   - metric: L2
#     metric_threshold: 0.1
#     max_iterations: "${n}"
#     max_depth: 15


# 1dir breadth-first
# 1dir breadth-first, collapse nodes with same image
# 1dir breadth-first, avoid equivalent plans
# 1dir breadth-first, collapse nodes with same image, avoid equivalent plans
# 2dir breadth-first, collapse nodes with same image
# 1dir breadth-first, avoid equivalent plans
# 1dir breadth-first, collapse nodes with same image, avoid equivalent plans



    
    