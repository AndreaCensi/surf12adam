

- id: torus1_d10
  desc: The torus is a system with only one possible action. 
  desc_long: |
    Preparation
    -----------
        
    Prepare test cases using:

        dp gentests -n 10 -l 10 -i lena dtx2

    (this step should be automated)

    Expectation
    -----------
    Basically every plan is of the form [0, 0, ...]: 
    if you go around enough, you come back where you started.
    
    We expect all algorithms (except the random ones) 
    to succeed and have the same plan.
    
    Reality
    -------

    ???

  algorithms:
  - graphsearch_deep_100
  - graphsearch_breadth_100
  - expansive_100_r5
  testcases:
  - tc_dtx2_lena_d10_*



- id: torus2_d10
  desc: This is the torus, but now we can go both left and right.
  desc_long: |
    
    Preparation
    -----------
        
    Prepare test cases using:

        dp gentests -n 10 -l 10 -i lena dtx1

    (this step should be automated)

    Expectation
    -----------

    ???
    
    Reality
    -------

    ???

  algorithms:
  - graphsearch_deep_100
  - graphsearch_breadth_100
  - expansive_100_r5
  testcases:
  - tc_dtx1_lena_d10_*


- id: dcam1_d3
  desc: "synthetic pan/tilt camera, small steps"
  desc_long: |
    
    Preparation
    -----------
        
    Prepare test cases using:

        dp gentests -n 10 -l 3 -i lena dcam1

    (this step should be automated)

    Expectation
    -----------

    Dumb algorithms get the solution after minutes
    Smart algorithms take much less
    
    Reality
    -------

    ???

  algorithms:
  - graphsearch_deep_5
  testcases:
  - tc_dcam1_*_d3_*



- id: test_misc1
  desc: ""
  desc_long: |
    
    Preparation
    -----------
        
    Prepare test cases using:

        dp gentests -n 1 -l 5 -i lena orbit-pt256-80x60 dptcam3

    (this step should be automated)

    ???

  algorithms:
  - infotree1
  testcases:
  - tc_orbit-pt256-80x60_*_d5_000
  - tc_dptcam3_*_d5_000

